<!--
Copyright 2021 The Vitess Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!DOCTYPE html>
<html lang="en">

{{template "headHTML" .}}

<body>
    <div style="min-height: 90vh;">
    <!-- Navigation -->
    {{ template "navigation" "/macrobench" }}

    <!--------------------------------------------------------------------------- Information ---------------------------------------------------------------------------------------------->

    <section class="py-5">
        <div class="container">
            <h1>Macrobenchmarks</h1>
            <p class="lead">Comparing results for <a href="https://github.com/vitessio/vitess/commit/{{ .leftSHA }}" target="_blank">{{ .leftTag }}</a> and <a href="https://github.com/vitessio/vitess/commit/{{ .rightSHA }}" target="_blank">{{ .rightTag }}</a> </p>
        </div>

        <div class="container" style="padding-bottom: 15px;">
            <div class="btn-toolbar" role="toolbar" aria-label="Tags">
                <div class="btn-group mr-2" role="group">
                    <div class="dropdown">
                        <button class="btn btn-primary btn-lg dropdown-toggle" type="button" id="leftTagDropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            {{ .leftTag }}
                        </button>
                        <div class="dropdown-menu" style="height:200px; overflow-y: scroll;"  aria-labelledby="leftTagDropdownMenuButton">
                            {{range $val := .allReleases}}
                                <a class="dropdown-item" href="#">{{$val.Name}}</a>
                                <div class="dropdown-divider"></div>
                            {{end}}
                        </div>
                    </div>
                </div>
                <div class="btn-group mr-2" role="group">
                    <div class="dropdown">
                        <button class="btn btn-primary btn-lg dropdown-toggle" type="button" id="rightTagDropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            {{ .rightTag }}
                        </button>
                        <div class="dropdown-menu" style="height:200px; overflow-y: scroll;" aria-labelledby="rightTagDropdownMenuButton">
                            {{range $val := .allReleases}}
                                <a class="dropdown-item" href="#">{{$val.Name}}</a>
                                <div class="dropdown-divider"></div>
                            {{end}}
                        </div>
                    </div>
                </div>
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-secondary" id="go-button">Go</button>
                </div>
            </div>
        </div>

        <div class="container-xl">
            {{ range $key, $val := .macrobenchmark }}

                <h4>{{ $key.ToUpper }}</h4>
                {{ if $val }}
                    <table class="table table-striped table-hover table-sm table-bordered" >
                        <thead>
                        <tr>
                            <th scope="col"></th>
                            <th scope="col" class="text-center"><a href="https://github.com/vitessio/vitess/commit/{{ $.leftSHA }}" target="_blank">{{ $.leftTag }}</a></th>
                            <th scope="col" class="text-center"><a href="https://github.com/vitessio/vitess/commit/{{ $.rightSHA }}" target="_blank">{{ $.rightTag }}</a></th>
                            <th scope="col" class="text-center">Improved by %</th>
                        </tr>
                        </thead>
                        <tbody>
                        {{ range $elem := $val }}
                            <tr>
                                <th scope="row" class="text-center">QPS Total</th>
                                <td class="text-center">{{ $elem.Compare.Result.QPS.TotalStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.QPS.TotalStr }}</td>
                                <td class="text-center">{{ $elem.Diff.QPS.TotalStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">QPS Reads</th>
                                <td class="text-center">{{ $elem.Compare.Result.QPS.ReadsStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.QPS.ReadsStr }}</td>
                                <td class="text-center">{{ $elem.Diff.QPS.ReadsStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">QPS Writes</th>
                                <td class="text-center">{{ $elem.Compare.Result.QPS.WritesStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.QPS.WritesStr }}</td>
                                <td class="text-center">{{ $elem.Diff.QPS.WritesStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">QPS Other</th>
                                <td class="text-center">{{ $elem.Compare.Result.QPS.OtherStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.QPS.OtherStr }}</td>
                                <td class="text-center">{{ $elem.Diff.QPS.OtherStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">TPS</th>
                                <td class="text-center">{{ $elem.Compare.Result.TPSStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.TPSStr }}</td>
                                <td class="text-center">{{ $elem.Diff.TPSStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">Latency</th>
                                <td class="text-center">{{ $elem.Compare.Result.LatencyStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.LatencyStr }}</td>
                                <td class="text-center">{{ $elem.Diff.LatencyStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">Errors</th>
                                <td class="text-center">{{ $elem.Compare.Result.ErrorsStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.ErrorsStr }}</td>
                                <td class="text-center">{{ $elem.Diff.ErrorsStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">Reconnects</th>
                                <td class="text-center">{{ $elem.Compare.Result.ReconnectsStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.ReconnectsStr }}</td>
                                <td class="text-center">{{ $elem.Diff.ReconnectsStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">Time</th>
                                <td class="text-center">{{ $elem.Compare.Result.TimeStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.TimeStr }}</td>
                                <td class="text-center">{{ $elem.Diff.TimeStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">Threads</th>
                                <td class="text-center">{{ $elem.Compare.Result.ThreadsStr }}</td>
                                <td class="text-center">{{ $elem.Reference.Result.ThreadsStr }}</td>
                                <td class="text-center">{{ $elem.Diff.ThreadsStr }}</td>
                            </tr>
                            <tr>
                                <th scope="row" class="text-center">Total CPU time</th>
                                <td class="text-center">{{ formatFloat $elem.Compare.Metrics.TotalComponentsCPUTime }}</td>
                                <td class="text-center">{{ formatFloat $elem.Reference.Metrics.TotalComponentsCPUTime }}</td>
                                <td class="text-center">{{ formatFloat $elem.DiffMetrics.TotalComponentsCPUTime }}</td>
                            </tr>
                            {{ range $componentCPUName, $componentCPUValue := $elem.Compare.Metrics.ComponentsCPUTime }}
                                <tr>
                                    <th scope="row" class="text-center">CPU time {{$componentCPUName}}</th>
                                    <td class="text-center">{{ formatFloat (index $elem.Compare.Metrics.ComponentsCPUTime $componentCPUName) }}</td>
                                    <td class="text-center">{{ formatFloat (index $elem.Reference.Metrics.ComponentsCPUTime $componentCPUName) }}</td>
                                    <td class="text-center">{{ formatFloat (index $elem.DiffMetrics.ComponentsCPUTime $componentCPUName) }}</td>
                                </tr>
                            {{ end }}
                            <tr>
                                <th scope="row" class="text-center">Total Allocs bytes</th>
                                <td class="text-center">{{ formatBytes $elem.Compare.Metrics.TotalComponentsMemStatsAllocBytes }}</td>
                                <td class="text-center">{{ formatBytes $elem.Reference.Metrics.TotalComponentsMemStatsAllocBytes }}</td>
                                <td class="text-center">{{ formatFloat $elem.DiffMetrics.TotalComponentsMemStatsAllocBytes }}</td>
                            </tr>
                            {{ range $componentAllocsName, $componentAllocsValue := $elem.Compare.Metrics.ComponentsMemStatsAllocBytes }}
                            <tr>
                                <th scope="row" class="text-center">Allocs bytes {{$componentAllocsName}}</th>
                                <td class="text-center">{{ formatBytes (index $elem.Compare.Metrics.ComponentsMemStatsAllocBytes $componentAllocsName) }}</td>
                                <td class="text-center">{{ formatBytes (index $elem.Reference.Metrics.ComponentsMemStatsAllocBytes $componentAllocsName) }}</td>
                                <td class="text-center">{{ formatFloat (index $elem.DiffMetrics.ComponentsMemStatsAllocBytes $componentAllocsName) }}</td>
                            </tr>
                            {{ end }}
                        {{ end }}
                        </tbody>
                    </table>
                    <canvas id="{{$key}}-bar-chart" height="75"></canvas>
                {{ else if not $val }}
                    <div class="alert alert-warning" role="alert">
                        No {{ $key.ToUpper }} macro benchmark results. You can <a href="/request_benchmark?s=[{{$.rightSHA}},{{ $.leftSHA }}]&type=macrobench-{{$key}}">request</a> a run.
                    </div>
                {{ end }}
            {{ end }}
        </div>
    </section>

    <script>
        $(document).ready(function(){
            $('.dropdown-item').click(function (){
                $(this).parent().parent().find('.dropdown-toggle').text($(this).text());
            })

            $('#go-button').click(function (){
                window.open("/macrobench?ltag="+$('#leftTagDropdownMenuButton').text()+"&rtag="+$('#rightTagDropdownMenuButton').text(), '_self');
            })
        });

        function macroCmpBarCharts(type, macro) {
            for (const macroKey in macro) {
                var compareMacros = macro[macroKey]["Compare"]["Result"]
                var referenceMacros = macro[macroKey]["Reference"]["Result"]

                var labels = []
                var dataCmp = []
                var dataRef = []
                var wants = ["total", "reads", "writes", "other"]
                for (var x in referenceMacros["qps"]) {
                    if (wants.includes(x)) {
                        labels.push(x)
                        dataCmp.push(compareMacros["qps"][x])
                        dataRef.push(referenceMacros["qps"][x])
                    }
                }
                const data = {
                    labels: labels,
                    datasets: [
                        {
                            label: '{{.leftTag}}',
                            data: dataCmp,
                            color: 'black',
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.5)',
                                'rgba(255, 99, 132, 0.5)',
                                'rgba(255, 99, 132, 0.5)',
                                'rgba(255, 99, 132, 0.5)',
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(255, 99, 132, 1)',
                                'rgba(255, 99, 132, 1)',
                                'rgba(255, 99, 132, 1)',
                            ],
                        },
                        {
                            label: '{{.rightTag}}',
                            data: dataRef,
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.5)',
                                'rgba(54, 162, 235, 0.5)',
                                'rgba(54, 162, 235, 0.5)',
                                'rgba(54, 162, 235, 0.5)',
                            ],
                            borderColor: [
                                'rgba(54, 162, 235, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(54, 162, 235, 1)',
                            ],
                        }
                    ]
                };
                const config = {
                    type: 'bar',
                    data: data,
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: true,
                            }
                        }
                    },
                };
                var ctx = document.getElementById(type+"-bar-chart").getContext('2d');
                var chart = new Chart(ctx, config)
            }
        }

        var macro = {{ .macrobenchmark }}

        for (const macroKey in macro) {
            macroCmpBarCharts(macroKey, macro[macroKey])
        }
    </script>

    </div>
    {{template "footerHTML" .}}

</body>

</html>
