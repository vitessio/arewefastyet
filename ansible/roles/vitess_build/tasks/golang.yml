# Copyright 2021 The Vitess Authors.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#    http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Set fact for arch i386
  set_fact:
    architecture: 386
    golang_hash: "{{ golang_hash_linux_386[golang_gover] }}"
  when: ansible_architecture == 'i386'

- name: Set fact for arch x86_64
  set_fact:
    architecture: amd64
    golang_hash: "{{ golang_hash_linux_amd64[golang_gover] }}"
  when: ansible_architecture == 'x86_64'

- name: Set fact for Linux
  set_fact:
    go_url: "https://storage.googleapis.com/golang/go{{ golang_gover }}.linux-{{ architecture }}.tar.gz"
    go_dest: "/usr/local/go{{ golang_gover }}.linux-{{ architecture }}.tar.gz"
  when: ansible_system == 'Linux'

- name: Check if golang archive is present
  become: yes
  become_user: root
  stat: path=/usr/local/go{{ golang_gover }}.linux-{{ architecture }}.tar.gz
  register: goarchive

- name: download recent golang
  become: yes
  become_user: root
  get_url:
    url='{{ go_url }}'
    dest='{{ go_dest }}'
    mode=0440
    checksum='{{ golang_hash }}'
  when: not goarchive.stat.exists

- name: Remove Go Binary
  become: yes
  become_user: root
  file:
    state: absent
    path: /usr/local/go
  changed_when: False

- name: Extract go archive to /usr/local
  unarchive: "src={{ go_dest }} dest=/usr/local/ copy=no"
  changed_when: False

- name: Add symlinks from /usr/local/go/bin to /usr/bin
  file: src=/usr/local/go/bin/{{ item }} dest=/usr/bin/{{ item }} state=link
  with_items:
    - go
    - gofmt

- name: Go version
  shell: go version
  register: go
  changed_when: False

- name: Print go version
  debug: msg="{{ go.stdout }}"
